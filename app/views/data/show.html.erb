<!DOCTYPE html>
<html>
  <head>
    <title>D3 - Data Driven Documents</title>
    <script src="http://d3js.org/d3.v3.min.js" charset="utf-8"></script>
    <script src="http://underscorejs.org/underscore.js" charset="utf-8"></script>
    <style type="text/css">
      .bar {
        display: inline-block;
        width: 20px;
        height: 75px; /* Gets overriden by D3-assigned height below */
        margin-right: 2px;
      }

      .bubble {
        display: inline-block;
        fill: purple;
        fill-opacity: 0.5;
        stroke: black;
        stroke-weight: 1px;
      }

    </style>
  </head>
  <body>
    <div class="container">
      <div class="col-sm-6 text-center" id="barChartArea"></div>
      <div class="col-sm-6 text-center" id="bubbleChartArea"></div>
    </div>
    <script type="text/javascript">

      var barDataset = _.map(_.range(15), function(i) {
        return Math.random() * 100;
      });

      var margin = { top: 0, right: 0, bottom: 0, left: 0 };
          w = 400 - margin.left - margin.right;
          h = 300 - margin.top - margin.bottom;

      var svg = d3.select("#barChartArea").append("svg")
                  .attr("width", w + margin.left + margin.right)
                  .attr("height", h + margin.top + margin.bottom)
                  .append("g")
                  .attr("transform", "translate(" + margin.left + ", " + margin.top + ")");

      var xBarScale = d3.scale.ordinal()
                        .domain(barDataset)
                        .rangeBands([0,w], 0.1, 0.3);

      var yBarScale = d3.scale.linear()
                        .domain([0,d3.max(barDataset) * 1.1])
                        .range([0,h]);

      var colorScale = d3.scale.linear()
                         .domain([0,d3.max(barDataset)])
                         .range(["blue", "purple"]);

      svg.selectAll("rect")
        .data(barDataset)
        .enter()
        .append("rect")
        .attr("class", "bar")
        .attr("x", xBarScale)
        .attr("y", function(d) {
          return h - yBarScale(d);
        })
        .attr("width", xBarScale.rangeBand())
        .attr("height", yBarScale)
        .attr("fill", colorScale);

// =============================================================================

      var bubbleDataset = _.map(_.range(15), function(i) {
        return{
          x: Math.random() * 100,
          y: Math.random() * 100,
          r: Math.random() * 30
        };
      });

      var xBubbleScale = d3.scale.linear()
                           .domain([0,100])
                           .range([0,w]);

      var yBubbleScale = d3.scale.linear()
                           .domain([0,d3.max(bubbleDataset, function(d) {
                             return d.y;
                           })])
                           .range([h,0]);

      var margin = { top: 0, right: 0, bottom: 0, left: 0 };
          w = 400 - margin.left - margin.right;
          h = 300 - margin.top - margin.bottom;

      var svg = d3.select("#bubbleChartArea").append("svg")
                  .attr("width", w + margin.left + margin.right)
                  .attr("height", h + margin.top + margin.bottom)
                  .append("g")
                  .attr("transform", "translate(" + margin.left + ", " + margin.top + ")");

      svg.selectAll("circle")
        .data(bubbleDataset)
        .enter()
        .append("circle")
        .attr("class", "bubble")
        .attr("cx", function(d) {
          return xBubbleScale(d.x);
        })
        .attr("cy", function(d) {
          return yBubbleScale(d.y);
        })
        .attr("r", function(d) {
          return d.r;
        });

    </script>
  </body>
</html>
